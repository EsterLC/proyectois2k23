<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA/CAYAAAC8aKvcAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAABAFJREFUaEPtmb2KFUEQhX0lU0PBRDPBwE1FNBIEEwUxUAMDMRBUMBAxENlIo418
        AQMDn0HEp7jyLfTQM3OquvpnvHLdAwfXe6un6+upqvt37vzFq7v/yWfAh+4z4EP3GfAIXzm6vbt59+Hu
        zftPu2/ff5x6qZ+/fp+a5z6ffD2NZY263kgPAwYyAfaIQ+AAtoLvBk6gWwh4rq32bXUX8FagSwH+6NlL
        mUOtm4Apt30IcCpK5RR1NXDNXU1DiTWYu8Rh8S/mMfq1pu9773YVcCSx1He1Q4c7B0jNHuo6JYeASaaU
        SE8SS0cHYct+IeAS7CjQpSMHXbt3EdjbkLtaKl2SJobEuFYyvZt6Wq3LXbrbNdAusLcRSas1uUuJJkXa
        gYOxFDn4ZBPY26AEGylFpRI01wVOicd5Xq3LbQJbF47c2RbYpAi0JdpErcktga1S5BBUfO5oGVuKlCe9
        rxRZK4EtRfrEE3eeu1B6sxGpIutgS2tXwCSjVCo1bJ28lYTVk5FK8uaEd2NWwJaWccoWsDdMrDsVGUC1
        B4xnwNYFeDyPs6yqo1Ri1hCKtA9Wd9mrkBmwVc55jOd9ABOnZK2fASsBkcd43gewtd7adwLuLWfM5kur
        uNzEKEWBcU1ZT8C95dxqa9/IYSVbZX10694q1gWuKecWA6VelpCKt2xVyZ0HT1exE7DaeEtgklSliFr2
        VXr8/PUqzgWOvNlosQeLaso5WV3PBVaqGVhRl2Bb91TXPP5ysopzgWsmZdQeLM+pNRGrGbR3YO+TVA8s
        VsCv3n1cxbnAI3vYeulAvbBYVY4LvPXQst7YjIDFKn93aKkTGpUMViWHVGyLldzXYZXQSOCtX+eVXGA1
        UEgyD+7xli1jtculazdWsROwNVRGJbUlsGpHpGInYKwWjrrLWwIrWe0yA1ZljUa8Hm8FbJWzlfMM2PrU
        MSIxEli65T3z0pZULJ4BY1XWI6fpSFsV6eW7At7q5enC5evSKjZiqxqRVzkrYNVrI+6wuu7bD8cyNmJr
        MpfabwWsNOJj4khgCxap+NwzYGvi/UvAVt+iSJ4h4BHTdASwBxudMzNgNbBQHtPqXmArN1QzVGfAKqkR
        Awvff/JCWsXmprq8niXnmgqcASuN6N8WA+GVcBJvYNR6yxNwtH/5P7Ekk06eU8ZUQ+8BRUHZrxYWF4HZ
        PIeLKIePlFuCjO5RW8a5J2BvKPQqVQBA7IP5m8dqxbocoNZ/BXiEOByqIE++xRNwpG/2oVGgyRMwPVGr
        lAweXSGjQZMnYMzUU33FY/QOCTCIrOnIofF8K3yCbJm+Uc+AMV988bsq3/ip31ejzq+D+VIc8/MH5m++
        N8bEqS/ctvAK+NB9BnzYvrr7A5ir302ifBfUAAAAAElFTkSuQmCC
</value>
  </data>
</root>